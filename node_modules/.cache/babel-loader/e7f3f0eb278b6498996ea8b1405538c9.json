{"ast":null,"code":"var _jsxFileName = \"/Users/zhijiechen/Desktop/AC/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'd4372095e2af4371b3202f8bd4bd062a'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 300\n      }\n    } // line_linked: {\n    //   shadow: {\n    //     enable: true,\n    //     color: \"#3CA9D1\",\n    //     blur: 5\n    //   }\n    // }\n\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      // console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); // console.log(event.target.value)\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', //Clarifai.COLOR_MODEL,\n      //Clarifai.FACE_DETECT_MODEL, \n      this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            //content type\n            body: JSON.stringify({\n              id: this.state.user.id\n            }) //request req.body is id\n\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err)); // console.log(response.outputs[0].data.regions[0]\n      //   .region_info.bounding_box);\n      //console.log(response.outputs);\n      // do something with response\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: isSignedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }) //route='register'\n    );\n  }\n\n} // <Navigation onRouteChange={this.onRouteChange}/>\n//         { this.state.route === 'signin' \n//           ? <Signin onRouteChange={this.onRouteChange}/>\n//           : <div>\n//               <Logo />\n//               <Rank />\n//               <ImageLinkForm \n//                 onInputChange={this.onInputChange} \n//                 onButtonSubmit={this.onButtonSubmit}/>\n//               <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       input: '',\n//     }\n//   }\n//   onInputChange = () =>\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Particles className='particles'\n//           params={particlesOptions}\n//         />\n//         <Navigation />\n//         <Logo />\n//         <Rank />\n//         <ImageLinkForm />\n//         {/*<FaceRecognition />*/}\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/zhijiechen/Desktop/AC/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'd4372095e2af4371b3202f8bd4bd062a'\n});\n\nconst particlesOptions = {\n    particles: {\n      number: {\n        value: 30,\n        density: {\n          enable: true,\n          value_area: 300\n        }\n      }\n      // line_linked: {\n      //   shadow: {\n      //     enable: true,\n      //     color: \"#3CA9D1\",\n      //     blur: 5\n      //   }\n      // }\n    }\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n  \n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n\n  }\n\n  // componentDidMount() {\n  //   console.log(3);\n  //   fetch('http://localhost:3000')\n  //     .then(response => response.json())\n  //     .then(console.log)\n  // }\n\n  displayFaceBox = (box) =>{\n    // console.log(box);\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n    // console.log(event.target.value)\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        'c0c0ac362b03416da06ab3fa36fb58e3',\n        //Clarifai.COLOR_MODEL,\n      //Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then(response => {\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'}, //content type\n            body: JSON.stringify({\n              id: this.state.user.id\n            }) //request req.body is id\n\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}));\n        })\n      }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      \n      })\n      .catch(err => console.log(err));\n        // console.log(response.outputs[0].data.regions[0]\n        //   .region_info.bounding_box);\n        //console.log(response.outputs);\n        // do something with response\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState);\n    }else if(route === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n  const {isSignedIn, imageUrl, route, box} = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}/>\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n        {route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (route === 'signin' \n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> //route='register'\n            )                \n        }\n      </div>\n    );\n  }\n}\n\n// <Navigation onRouteChange={this.onRouteChange}/>\n//         { this.state.route === 'signin' \n//           ? <Signin onRouteChange={this.onRouteChange}/>\n//           : <div>\n//               <Logo />\n//               <Rank />\n//               <ImageLinkForm \n//                 onInputChange={this.onInputChange} \n//                 onButtonSubmit={this.onButtonSubmit}/>\n//               <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       input: '',\n//     }\n//   }\n\n//   onInputChange = () =>\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Particles className='particles'\n//           params={particlesOptions}\n//         />\n//         <Navigation />\n//         <Logo />\n//         <Rank />\n//         <ImageLinkForm />\n//         {/*<FaceRecognition />*/}\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}